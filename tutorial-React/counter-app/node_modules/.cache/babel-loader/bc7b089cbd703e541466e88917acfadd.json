{"ast":null,"code":"var _jsxFileName = \"D:\\\\UPB\\\\practica-ind-prof\\\\tutorial-React\\\\counter-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0,\n      imageURL: 'https:picsum.photos/200'\n    };\n    this.styles = {\n      fontSize: 15,\n      fontWeight: \"bold\"\n    };\n  }\n\n  render() {\n    let classes = this.getBadgeClasses();\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello World!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: this.styles,\n        className: this.getBadgeClasses(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this); //solo puede interpretar un tag por eso se los envuelve en div o si quieres que no haya div con react.fragment\n  } // badge y btn son de bootrap \n  // se puede hacer styles normales como styles y hacer css a lo normal\n  //intentar mantener limpio el metodo de render\n\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 bg-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state; // return count === 0 ? <h1>Zero</h1> : count;\n\n    return count === 0 ? \"Zero\" : count; //if count equals 0 then return \"Zero\" : otherwise count\n    // === ----> if equals\n    //? ------> return\n    //: ----> otherwise\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"names":["React","Component","Counter","state","count","imageURL","styles","fontSize","fontWeight","render","classes","getBadgeClasses","formatCount"],"sources":["D:/UPB/practica-ind-prof/tutorial-React/counter-app/src/components/counter.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nclass Counter extends Component {\r\n    state = {\r\n        count:0,\r\n        imageURL: 'https:picsum.photos/200'\r\n    };\r\n\r\n    styles = {\r\n        fontSize: 15,\r\n        fontWeight: \"bold\"\r\n    }\r\n    \r\n\r\n    render() { \r\n        let classes = this.getBadgeClasses();\r\n        return (\r\n        <React.Fragment>\r\n            <h1>Hello World!</h1>\r\n            {/* <img src={this.state.imageURL} alt=\"\" /> */}\r\n            <span style={this.styles} className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n            <button className='btn btn-secondary btn-sm'>Increment</button>\r\n        </React.Fragment>);\r\n        //solo puede interpretar un tag por eso se los envuelve en div o si quieres que no haya div con react.fragment\r\n    }\r\n    // badge y btn son de bootrap \r\n    // se puede hacer styles normales como styles y hacer css a lo normal\r\n    //intentar mantener limpio el metodo de render\r\n\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 bg-\";\r\n        classes += (this.state.count === 0) ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount(){\r\n        const {count} = this.state;\r\n        // return count === 0 ? <h1>Zero</h1> : count;\r\n\r\n        return count === 0 ? \"Zero\" : count;\r\n        //if count equals 0 then return \"Zero\" : otherwise count\r\n        // === ----> if equals\r\n        //? ------> return\r\n        //: ----> otherwise\r\n    }\r\n}\r\n \r\nexport default Counter;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;EAAA;IAAA;IAAA,KAC5BE,KAD4B,GACpB;MACJC,KAAK,EAAC,CADF;MAEJC,QAAQ,EAAE;IAFN,CADoB;IAAA,KAM5BC,MAN4B,GAMnB;MACLC,QAAQ,EAAE,EADL;MAELC,UAAU,EAAE;IAFP,CANmB;EAAA;;EAY5BC,MAAM,GAAG;IACL,IAAIC,OAAO,GAAG,KAAKC,eAAL,EAAd;IACA,oBACA,QAAC,KAAD,CAAO,QAAP;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAGI;QAAM,KAAK,EAAE,KAAKL,MAAlB;QAA0B,SAAS,EAAE,KAAKK,eAAL,EAArC;QAAA,UAA8D,KAAKC,WAAL;MAA9D;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAQ,SAAS,EAAC,0BAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,CAFK,CASL;EACH,CAtB2B,CAuB5B;EACA;EACA;;;EAEAD,eAAe,GAAG;IACd,IAAID,OAAO,GAAG,eAAd;IACAA,OAAO,IAAK,KAAKP,KAAL,CAAWC,KAAX,KAAqB,CAAtB,GAA2B,SAA3B,GAAuC,SAAlD;IACA,OAAOM,OAAP;EACH;;EAEDE,WAAW,GAAE;IACT,MAAM;MAACR;IAAD,IAAU,KAAKD,KAArB,CADS,CAET;;IAEA,OAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B,CAJS,CAKT;IACA;IACA;IACA;EACH;;AA1C2B;;AA6ChC,eAAeF,OAAf"},"metadata":{},"sourceType":"module"}